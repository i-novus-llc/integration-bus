<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-1.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://n2oapp.net/framework/config/schema/object-1.0 http://localhost:8080/n2o/config/schema/object/object-1.0.xsd"
        xmlns:sql="http://n2oapp.net/framework/config/schema/action-sql-1.0">
    <name>registry</name>
    <actions>
        <action id="createParticipant">
            <invocation>
                <sql:sql>
                    INSERT INTO integration.participant(
                    code, name, disable)
                    VALUES (:id, :name, :disable);
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="string"/>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="disable" mapping="['disable']" domain="boolean"/>
            </in-parameters>
        </action>

        <action id="updateParticipant">
            <invocation>
                <sql:sql>
                    UPDATE integration.participant
                    SET name=:name, disable=:disable
                    WHERE code=:id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="string"/>
                <param name="name" mapping="['name']" domain="string"/>
                <param name="disable" mapping="['disable']" domain="boolean"/>
            </in-parameters>
        </action>

        <action id="deleteParticipant">
            <invocation>
                <sql:sql>
                    DELETE FROM integration.participant
                    WHERE code=:id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="string"/>
            </in-parameters>
        </action>

        <action id="createMethod">
            <invocation>
                <sql:sql>
                    INSERT INTO integration.participant_method(
                    id, participant_code, method_code, url, disable, integration_type)
                    VALUES (nextval('integration.participant_method_id_seq'), :participant_code, :method_code, :url, :disable, '-');
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="participant_code" mapping="['participant_code']" domain="string"/>
                <param name="method_code" mapping="['method_code']" domain="string"/>
                <!--<param name="integration_type.id" mapping="['integration_type.id']" domain="string"/>-->
                <param name="url" mapping="['url']" domain="string"/>
                <param name="disable" mapping="['disable']" domain="boolean"/>
            </in-parameters>
        </action>

        <action id="updateMethod">
            <invocation>
                <sql:sql>
                    UPDATE integration.participant_method
                    SET method_code=:method_code, url=:url, disable=:disable, integration_type='-'
                    WHERE id=:id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="method_code" mapping="['method_code']" domain="string"/>
                <!--<param name="integration_type.id" mapping="['integration_type_id']" domain="string"/>-->
                <param name="url" mapping="['url']" domain="string"/>
                <param name="disable" mapping="['disable']" domain="boolean"/>
            </in-parameters>
        </action>

        <action id="deleteMethod">
            <invocation>
                <sql:sql>
                    DELETE FROM integration.participant_method
                    WHERE id=:id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
        </action>

        <action id="permissionCreate">
            <invocation>
                <sql:sql>
                    INSERT INTO integration.participant_permission(
                    id, participant_method_id, participant_code, group_code, callback_url,
                    sync)
                    VALUES (nextval('integration.participant_permission_id_seq'),
                    :participant_method_id, :participant.id, :group.id, :callback_url, :sync);

                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="participant_method_id" mapping="['participant_method_id']" domain="integer"/>
                <param name="participant.id" mapping="['participant.id']" domain="string"/>
                <param name="group.id" mapping="['group.id']" domain="string"/>
                <param name="callback_url" mapping="['callback_url']" domain="string"/>
                <param name="sync" mapping="['sync']" domain="boolean"/>
            </in-parameters>
        </action>

        <action id="permissionUpdate">
            <invocation>
                <sql:sql>
                    UPDATE integration.participant_permission
                    SET participant_code=:participant.id, group_code=:group.id,
                    callback_url=:callback_url, sync=:sync
                    WHERE id=:id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
                <param name="participant.id" mapping="['participant.id']" domain="string"/>
                <param name="group.id" mapping="['group.id']" domain="string"/>
                <param name="callback_url" mapping="['callback_url']" domain="string"/>
                <param name="sync" mapping="['sync']" domain="boolean"/>
            </in-parameters>
        </action>

        <action id="permissionDelete">
            <invocation>
                <sql:sql>
                    DELETE FROM integration.participant_permission
                    WHERE id=:id;
                </sql:sql>
            </invocation>
            <in-parameters>
                <param name="id" mapping="['id']" domain="integer"/>
            </in-parameters>
        </action>
    </actions>
</object>
